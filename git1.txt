git 是分布式版本控制系统
https://git-scm.com/downloads GIT下载地址
自然安装之后，还需要最后一步设置，在Git Bash的命令行输入：
$git config --global user.name "Yan"
$git config --global user.email "cyy_1994@126.com"
上面的--global参数，表示本台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和email地址。

创建版本库：
1.
版本库又名仓库，英文名repository，可简单理解为一个目录，里面的所有文件都可以被Git管理，修改删除都能跟踪。
首先，选择一个合适的地方，创建一个空目录：
$ mkdir learngit   创建一个directory
$ cd learngit     进入该文件夹
$ pwd       用于显示当前目录
2.
$ git init    把上述目录变成Git可以管理的仓库，结果显示当前目录下多了一个.git的目录，不要手动修改。

把文件添加到版本库：
只能跟踪文本文件的改动，比如TXT文件、网页、程序代码等
必须放到learngit目录下（子目录也可）  放入工作区
1.放入暂存区
$ git add git1.txt     命令git add告诉Git，把文件添加到仓库。“没有消息就是好消息”
2.提交到分支
$ git commit -m "wrote the first file for learning git"
-m后面输入的是本次提交的说明，可以输入本次修改大致内容
该命令下会显示文件的改动
commit可以一次提交很多文件，例：
$ git add git2.txt
$ git add git3.txt git4.txt
$ git commit -m"add 3 files."

查看文件修改：
$ git status       查看工作区状态，要随时查看
$ git diff git1.txt     查看具体修改内容，按q退出当前进行下一个命令

若确认修改无误，提交修改：
$ git add git1.txt
$ git status    在执行第二步commit之前，可以再次查看当前仓库的状态
$ git commit -m"add distributed"     放心提交修改后的文件

查看修改历史记录：
$ git log    输出结果中commit后的串串是相应版本的ID，退回该版本所需要的
$ git log --pretty=oneline   查看简化的修改记录

回退到之前版本：
$ git reset --hard HEAD^   回退到最后一次修改前的版本
$ cat git1.txt     查看文件内容

使用版本ID再回到未来：
$ git reset --hard 1094a        hard后面写ID的前几位即可
$ cat git1.txt

另一种方法查看ID：
$ git reflog      所有的命令历史，ID历史

查看工作区和版本库里面最新版本的区别：
$ git diff HEAD -- git1.txt

丢弃工作区的修改：
$ git checkout -- git1.txt   将其在工作区的修改全部撤销

撤销暂存区的修改：
$ git reset HEAD git1.txt

删除文件：
$ rm file.txt
$ git status
确认删除
$ git rm file.txt
还原删除
$ git checkout -- file.txt

